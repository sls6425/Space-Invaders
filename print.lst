


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000         
   13 00000000 00000000 
                       first   EQU              0           ; variable offset
   14 00000000 00000004 
                       second  EQU              4
   15 00000000 00000008 
                       third   EQU              8
   16 00000000 0000000C 
                       fourth  EQU              12
   17 00000000 00000010 
                       fifth   EQU              16
   18 00000000 00000014 
                       sixth   EQU              20
   19 00000000 00000018 
                       seventh EQU              24
   20 00000000 0000001C 
                       eighth  EQU              28
   21 00000000 00000020 
                       ninth   EQU              32
   22 00000000 00000024 
                       tenth   EQU              36
   23 00000000         
   24 00000000                 IMPORT           ST7735_OutChar
   25 00000000                 IMPORT           ST7735_OutString
   26 00000000                 EXPORT           LCD_OutDec
   27 00000000                 EXPORT           LCD_OutFix
   28 00000000                 PRESERVE8
   29 00000000         
   30 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   31 00000000                 THUMB
   32 00000000         
   33 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   34 00000000         ; Output a 32-bit number in unsigned decimal format
   35 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   36 00000000         ; Output: none
   37 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   38 00000000         LCD_OutDec
   39 00000000 E92D 0FF0       PUSH             {R4 - R11}  ; save callee regis
                                                            ters
   40 00000004 B08A            SUB              SP, #40     ; allocate bytes fo
                                                            r local vars, max v



ARM Macro Assembler    Page 2 


                                                            alue in each byte i
                                                            s 9
   41 00000006         
   42 00000006 4993            LDR              R1, =1000000000 ; divisor is 1x
                                                            10^9 because ~4,200
                                                            ,000,000 is the gre
                                                            atest number you ca
                                                            n create with a 32 
                                                            bit input (2^32)
   43 00000008 FBB0 F3F1       UDIV             R3, R0, R1  ; divide by divisor
                                                            
   44 0000000C F103 0230       ADD              R2, R3, #0x30 ; add 0x30 (#48) 
                                                            to value for ASCII 
                                                            code, #0 is ox3o in
                                                             ASCII
   45 00000010 F88D 2000       STRB             R2, [SP, #first] ; store value 
                                                            in bound variable u
                                                            sing offset
   46 00000014 FB01 0013       MLS              R0, R1, R3, R0 ; modulus divisi
                                                            on, leaves mod in R
                                                            0
   47 00000018         ; R(1) is the destination register.
   48 00000018         ; R(2), R(3) are registers holding the values to be mult
                       iplied.
   49 00000018         ; R(4) is a register holding the value to be subtracted 
                       from.
   50 00000018         
   51 00000018 498F            LDR              R1, =100000000 ; 100 millions p
                                                            lace
   52 0000001A FBB0 F3F1       UDIV             R3, R0, R1
   53 0000001E F103 0230       ADD              R2, R3, #0x30
   54 00000022 F88D 2004       STRB             R2, [SP, #second]
   55 00000026 FB01 0013       MLS              R0, R1, R3, R0
   56 0000002A         
   57 0000002A 498C            LDR              R1, =10000000 
                                                            ; 10 millions place
                                                            
   58 0000002C FBB0 F3F1       UDIV             R3, R0, R1
   59 00000030 F103 0230       ADD              R2, R3, #0x30
   60 00000034 F88D 2008       STRB             R2, [SP, #third]
   61 00000038 FB01 0013       MLS              R0, R1, R3, R0
   62 0000003C         
   63 0000003C 4988            LDR              R1, =1000000 ; millions place
   64 0000003E FBB0 F3F1       UDIV             R3, R0, R1
   65 00000042 F103 0230       ADD              R2, R3, #0x30
   66 00000046 F88D 200C       STRB             R2, [SP, #fourth]
   67 0000004A FB01 0013       MLS              R0, R1, R3, R0
   68 0000004E         
   69 0000004E 4985            LDR              R1, =100000 ; hundred thousands
                                                             place
   70 00000050 FBB0 F3F1       UDIV             R3, R0, R1
   71 00000054 F103 0230       ADD              R2, R3, #0x30
   72 00000058 F88D 2010       STRB             R2, [SP, #fifth]
   73 0000005C FB01 0013       MLS              R0, R1, R3, R0
   74 00000060         
   75 00000060 F242 7110       LDR              R1, =10000  ; ten thousands pla
                                                            ce
   76 00000064 FBB0 F3F1       UDIV             R3, R0, R1
   77 00000068 F103 0230       ADD              R2, R3, #0x30



ARM Macro Assembler    Page 3 


   78 0000006C F88D 2014       STRB             R2, [SP, #sixth]
   79 00000070 FB01 0013       MLS              R0, R1, R3, R0
   80 00000074         
   81 00000074 F44F 717A       LDR              R1, =1000   ; thousands place
   82 00000078 FBB0 F3F1       UDIV             R3, R0, R1
   83 0000007C F103 0230       ADD              R2, R3, #0x30
   84 00000080 F88D 2018       STRB             R2, [SP, #seventh]
   85 00000084 FB01 0013       MLS              R0, R1, R3, R0
   86 00000088         
   87 00000088 F04F 0164       LDR              R1, =100    ; hunderds place
   88 0000008C FBB0 F3F1       UDIV             R3, R0, R1
   89 00000090 F103 0230       ADD              R2, R3, #0x30
   90 00000094 F88D 201C       STRB             R2, [SP, #eighth]
   91 00000098 FB01 0013       MLS              R0, R1, R3, R0
   92 0000009C         
   93 0000009C F04F 010A       LDR              R1, =10     ; tens place
   94 000000A0 FBB0 F3F1       UDIV             R3, R0, R1
   95 000000A4 F103 0230       ADD              R2, R3, #0x30
   96 000000A8 F88D 2020       STRB             R2, [SP, #ninth]
   97 000000AC FB01 0013       MLS              R0, R1, R3, R0
   98 000000B0         
   99 000000B0 F100 0030       ADD              R0, R0, #0x30 ; remaining modul
                                                            us is ones place
  100 000000B4 F88D 0024       STRB             R0, [SP, #tenth]
  101 000000B8         
  102 000000B8 F89D 0000       LDRB             R0, [SP, #first] ; check stack 
                                                            for first nonzero v
                                                            alue 
  103 000000BC 2830            CMP              R0, #0x30   ; starting with 32'
                                                            nd bit
  104 000000BE D123            BNE              start_here
  105 000000C0         
  106 000000C0 F89D 0004       LDRB             R0, [SP, #second]
  107 000000C4 2830            CMP              R0, #0x30
  108 000000C6 D124            BNE              slide_to_the_right
  109 000000C8         
  110 000000C8 F89D 0008       LDRB             R0, [SP, #third]
  111 000000CC 2830            CMP              R0, #0x30
  112 000000CE D127            BNE              again1
  113 000000D0         
  114 000000D0 F89D 000C       LDRB             R0, [SP, #fourth]
  115 000000D4 2830            CMP              R0, #0x30
  116 000000D6 D12A            BNE              again2
  117 000000D8         
  118 000000D8 F89D 0010       LDRB             R0, [SP, #fifth]
  119 000000DC 2830            CMP              R0, #0x30
  120 000000DE D12D            BNE              again3
  121 000000E0         
  122 000000E0 F89D 0014       LDRB             R0, [SP, #sixth]
  123 000000E4 2830            CMP              R0, #0x30
  124 000000E6 D130            BNE              again4
  125 000000E8         
  126 000000E8 F89D 0018       LDRB             R0, [SP, #seventh]
  127 000000EC 2830            CMP              R0, #0x30
  128 000000EE D133            BNE              again5
  129 000000F0         
  130 000000F0 F89D 001C       LDRB             R0, [SP, #eighth]
  131 000000F4 2830            CMP              R0, #0x30
  132 000000F6 D136            BNE              again6



ARM Macro Assembler    Page 4 


  133 000000F8         
  134 000000F8 F89D 0020       LDRB             R0, [SP, #ninth]
  135 000000FC 2830            CMP              R0, #0x30
  136 000000FE D139            BNE              again7
  137 00000100         
  138 00000100 F89D 0024       LDRB             R0, [SP, #tenth]
  139 00000104 2830            CMP              R0, #0x30
  140 00000106 E03C            B                last_time   ; always prints las
                                                            t digit by default
  141 00000108         
  142 00000108         ; print value starting with first nonzero value
  143 00000108         ; R0 loaded with "first" variable by default
  144 00000108         
  145 00000108         start_here                           ; output char 
  146 00000108 B501            PUSH             {LR,R0}
  147 0000010A F7FF FFFE       BL               ST7735_OutChar
  148 0000010E E8BD 4001       POP              {LR,R0}
  149 00000112         
  150 00000112         slide_to_the_right                   ; output char 
  151 00000112 F89D 0004       LDRB             R0, [SP, #second]
  152 00000116 B501            PUSH             {LR,R0}
  153 00000118 F7FF FFFE       BL               ST7735_OutChar
  154 0000011C E8BD 4001       POP              {LR,R0}
  155 00000120         
  156 00000120         again1                               ; output char
  157 00000120 F89D 0008       LDRB             R0, [SP, #third]
  158 00000124 B501            PUSH             {LR,R0}
  159 00000126 F7FF FFFE       BL               ST7735_OutChar
  160 0000012A E8BD 4001       POP              {LR,R0}
  161 0000012E         
  162 0000012E         again2                               ; output char 
  163 0000012E F89D 000C       LDRB             R0, [SP, #fourth]
  164 00000132 B501            PUSH             {LR,R0}
  165 00000134 F7FF FFFE       BL               ST7735_OutChar
  166 00000138 E8BD 4001       POP              {LR,R0}
  167 0000013C         
  168 0000013C         again3                               ; output char 
  169 0000013C F89D 0010       LDRB             R0, [SP, #fifth]
  170 00000140 B501            PUSH             {LR,R0}
  171 00000142 F7FF FFFE       BL               ST7735_OutChar
  172 00000146 E8BD 4001       POP              {LR,R0}
  173 0000014A         
  174 0000014A         again4                               ; output char 
  175 0000014A F89D 0014       LDRB             R0, [SP, #sixth]
  176 0000014E B501            PUSH             {LR,R0}
  177 00000150 F7FF FFFE       BL               ST7735_OutChar
  178 00000154 E8BD 4001       POP              {LR,R0}
  179 00000158         
  180 00000158         again5                               ; output char 
  181 00000158 F89D 0018       LDRB             R0, [SP, #seventh]
  182 0000015C B501            PUSH             {LR,R0}
  183 0000015E F7FF FFFE       BL               ST7735_OutChar
  184 00000162 E8BD 4001       POP              {LR,R0}
  185 00000166         
  186 00000166         again6                               ; output char 
  187 00000166 F89D 001C       LDRB             R0, [SP, #eighth]
  188 0000016A B501            PUSH             {LR,R0}
  189 0000016C F7FF FFFE       BL               ST7735_OutChar
  190 00000170 E8BD 4001       POP              {LR,R0}



ARM Macro Assembler    Page 5 


  191 00000174         
  192 00000174         again7                               ; output char 
  193 00000174 F89D 0020       LDRB             R0, [SP, #ninth]
  194 00000178 B501            PUSH             {LR,R0}
  195 0000017A F7FF FFFE       BL               ST7735_OutChar
  196 0000017E E8BD 4001       POP              {LR,R0}
  197 00000182         
  198 00000182         last_time                            ; output char 
  199 00000182 F89D 0024       LDRB             R0, [SP, #tenth]
  200 00000186 B501            PUSH             {LR,R0}
  201 00000188 F7FF FFFE       BL               ST7735_OutChar
  202 0000018C E8BD 4001       POP              {LR,R0}
  203 00000190         
  204 00000190 B00A            ADD              SP, #40     ; deallocate memory
                                                             for local vars
  205 00000192 E8BD 0FF0       POP              {R4 - R11}  ; pop callee regist
                                                            ers
  206 00000196 4770            BX               LR
  207 00000198         
  208 00000198         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
  209 00000198         
  210 00000198         ; -----------------------LCD _OutFix--------------------
                       --
  211 00000198         ; Output characters to LCD display in fixed-point format
                       
  212 00000198         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
  213 00000198         ; Inputs:  R0 is an unsigned 32-bit number
  214 00000198         ; Outputs: none
  215 00000198         ; E.g., R0=0,    then output "0.000 "
  216 00000198         ;       R0=3,    then output "0.003 "
  217 00000198         ;       R0=89,   then output "0.089 "
  218 00000198         ;       R0=123,  then output "0.123 "
  219 00000198         ;       R0=9999, then output "9.999 "
  220 00000198         ;       R0>9999, then output "*.*** "
  221 00000198         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  222 00000198         LCD_OutFix
  223 00000198 E92D 0FF0       PUSH             {R4 - R11}  ; save callee regis
                                                            ters
  224 0000019C         
  225 0000019C B085            SUB              SP, #20     ; allocate bytes fo
                                                            r local vars, max v
                                                            alue in each byte i
                                                            s 9
  226 0000019E         
  227 0000019E F04F 012A       MOV              R1, #42     ; ASCII code for "*
                                                            "
  228 000001A2 F04F 022E       MOV              R2, #46     ; ASCII code for ".
                                                            "
  229 000001A6         
  230 000001A6         
  231 000001A6         
  232 000001A6         ; default output = " *.*** "
  233 000001A6         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  234 000001A6         
  235 000001A6 F88D 1000       STRB             R1, [SP, #first] ; # (number)
  236 000001AA F88D 2004       STRB             R2, [SP, #second] ; . (always d
                                                            ecimal)



ARM Macro Assembler    Page 6 


  237 000001AE F88D 1008       STRB             R1, [SP, #third] ; # (number)
  238 000001B2 F88D 100C       STRB             R1, [SP, #fourth] ; # (number)
  239 000001B6 F88D 1010       STRB             R1, [SP, #fifth] ; # (number)
  240 000001BA         
  241 000001BA F242 710F       MOV              R1, #9999
  242 000001BE 4288            CMP              R0, R1      ; check if R0 > 999
                                                            9, this is the grea
                                                            test value that can
                                                             be displayed
  243 000001C0 D821            BHI              display
  244 000001C2         
  245 000001C2 F44F 717A       MOV              R1, #1000
  246 000001C6 FBB0 F2F1       UDIV             R2, R0, R1  ; divide R0 by 1000
                                                            
  247 000001CA FB01 0012       MLS              R0, R1, R2, R0 ; modulus divisi
                                                            on, mod in R0
  248 000001CE F102 0230       ADD              R2, #0x30
  249 000001D2 F88D 2000       STRB             R2, [SP, #first]
  250 000001D6         
  251 000001D6 F04F 0164       MOV              R1, #100
  252 000001DA FBB0 F2F1       UDIV             R2, R0, R1  ; divide R0 by 100
  253 000001DE FB01 0012       MLS              R0, R1, R2, R0 ; modulus divisi
                                                            on, mod in R0
  254 000001E2 F102 0230       ADD              R2, #0x30
  255 000001E6 F88D 2008       STRB             R2, [SP, #third]
  256 000001EA         
  257 000001EA F04F 010A       MOV              R1, #10
  258 000001EE FBB0 F2F1       UDIV             R2, R0, R1  ; divide R0 by 10
  259 000001F2 FB01 0012       MLS              R0, R1, R2, R0 ; modulus divisi
                                                            on, mod in R0
  260 000001F6 F102 0230       ADD              R2, #0x30
  261 000001FA F88D 200C       STRB             R2, [SP, #fourth]
  262 000001FE F100 0030       ADD              R0, #0x30
  263 00000202 F88D 0010       STRB             R0, [SP, #fifth] ; remaining mo
                                                            dulus is less than 
                                                            10
  264 00000206         
  265 00000206         display
  266 00000206 F89D 0000       LDRB             R0, [SP, #first] 
                                                            ; print variables
  267 0000020A B501            PUSH             {LR,R0}
  268 0000020C F7FF FFFE       BL               ST7735_OutChar
  269 00000210 E8BD 4001       POP              {LR,R0}
  270 00000214         
  271 00000214 F89D 0004       LDRB             R0, [SP, #second]
  272 00000218 B501            PUSH             {LR,R0}
  273 0000021A F7FF FFFE       BL               ST7735_OutChar
  274 0000021E E8BD 4001       POP              {LR,R0}
  275 00000222         
  276 00000222 F89D 0008       LDRB             R0, [SP, #third]
  277 00000226 B501            PUSH             {LR,R0}
  278 00000228 F7FF FFFE       BL               ST7735_OutChar
  279 0000022C E8BD 4001       POP              {LR,R0}
  280 00000230         
  281 00000230 F89D 000C       LDRB             R0, [SP, #fourth]
  282 00000234 B501            PUSH             {LR,R0}
  283 00000236 F7FF FFFE       BL               ST7735_OutChar
  284 0000023A E8BD 4001       POP              {LR,R0}
  285 0000023E         



ARM Macro Assembler    Page 7 


  286 0000023E F89D 0010       LDRB             R0, [SP, #fifth]
  287 00000242 B501            PUSH             {LR,R0}
  288 00000244 F7FF FFFE       BL               ST7735_OutChar
  289 00000248 E8BD 4001       POP              {LR,R0}
  290 0000024C         
  291 0000024C B005            ADD              SP, #20     ; deallocate local 
                                                            variables
  292 0000024E E8BD 0FF0       POP              {R4 - R11}  ; pop saved registe
                                                            rs
  293 00000252 4770            BX               LR
  294 00000254         
  295 00000254                 ALIGN
  296 00000254         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  297 00000254         
  298 00000254                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  299 00000254                 END                          ; end of file
              3B9ACA00 
              05F5E100 
              00989680 
              000F4240 
              000186A0 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab9 -IC:\Keil_v5\ARM\PACK\ARM\CMSI
S\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Inc
lude\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 52
6" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\print.
lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 30 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 38 in file Print.s
   Uses
      At line 26 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000198

Symbol: LCD_OutFix
   Definitions
      At line 222 in file Print.s
   Uses
      At line 27 in file Print.s
Comment: LCD_OutFix used once
again1 00000120

Symbol: again1
   Definitions
      At line 156 in file Print.s
   Uses
      At line 112 in file Print.s
Comment: again1 used once
again2 0000012E

Symbol: again2
   Definitions
      At line 162 in file Print.s
   Uses
      At line 116 in file Print.s
Comment: again2 used once
again3 0000013C

Symbol: again3
   Definitions
      At line 168 in file Print.s
   Uses
      At line 120 in file Print.s
Comment: again3 used once
again4 0000014A

Symbol: again4
   Definitions
      At line 174 in file Print.s
   Uses
      At line 124 in file Print.s
Comment: again4 used once
again5 00000158

Symbol: again5



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 180 in file Print.s
   Uses
      At line 128 in file Print.s
Comment: again5 used once
again6 00000166

Symbol: again6
   Definitions
      At line 186 in file Print.s
   Uses
      At line 132 in file Print.s
Comment: again6 used once
again7 00000174

Symbol: again7
   Definitions
      At line 192 in file Print.s
   Uses
      At line 136 in file Print.s
Comment: again7 used once
display 00000206

Symbol: display
   Definitions
      At line 265 in file Print.s
   Uses
      At line 243 in file Print.s
Comment: display used once
last_time 00000182

Symbol: last_time
   Definitions
      At line 198 in file Print.s
   Uses
      At line 140 in file Print.s
Comment: last_time used once
slide_to_the_right 00000112

Symbol: slide_to_the_right
   Definitions
      At line 150 in file Print.s
   Uses
      At line 108 in file Print.s
Comment: slide_to_the_right used once
start_here 00000108

Symbol: start_here
   Definitions
      At line 145 in file Print.s
   Uses
      At line 104 in file Print.s
Comment: start_here used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

eighth 0000001C

Symbol: eighth
   Definitions
      At line 20 in file Print.s
   Uses
      At line 90 in file Print.s
      At line 130 in file Print.s
      At line 187 in file Print.s

fifth 00000010

Symbol: fifth
   Definitions
      At line 17 in file Print.s
   Uses
      At line 72 in file Print.s
      At line 118 in file Print.s
      At line 169 in file Print.s
      At line 239 in file Print.s
      At line 263 in file Print.s
      At line 286 in file Print.s

first 00000000

Symbol: first
   Definitions
      At line 13 in file Print.s
   Uses
      At line 45 in file Print.s
      At line 102 in file Print.s
      At line 235 in file Print.s
      At line 249 in file Print.s
      At line 266 in file Print.s

fourth 0000000C

Symbol: fourth
   Definitions
      At line 16 in file Print.s
   Uses
      At line 66 in file Print.s
      At line 114 in file Print.s
      At line 163 in file Print.s
      At line 238 in file Print.s
      At line 261 in file Print.s
      At line 281 in file Print.s

ninth 00000020

Symbol: ninth
   Definitions
      At line 21 in file Print.s
   Uses
      At line 96 in file Print.s
      At line 134 in file Print.s
      At line 193 in file Print.s

second 00000004



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: second
   Definitions
      At line 14 in file Print.s
   Uses
      At line 54 in file Print.s
      At line 106 in file Print.s
      At line 151 in file Print.s
      At line 236 in file Print.s
      At line 271 in file Print.s

seventh 00000018

Symbol: seventh
   Definitions
      At line 19 in file Print.s
   Uses
      At line 84 in file Print.s
      At line 126 in file Print.s
      At line 181 in file Print.s

sixth 00000014

Symbol: sixth
   Definitions
      At line 18 in file Print.s
   Uses
      At line 78 in file Print.s
      At line 122 in file Print.s
      At line 175 in file Print.s

tenth 00000024

Symbol: tenth
   Definitions
      At line 22 in file Print.s
   Uses
      At line 100 in file Print.s
      At line 138 in file Print.s
      At line 199 in file Print.s

third 00000008

Symbol: third
   Definitions
      At line 15 in file Print.s
   Uses
      At line 60 in file Print.s
      At line 110 in file Print.s
      At line 157 in file Print.s
      At line 237 in file Print.s
      At line 255 in file Print.s
      At line 276 in file Print.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 24 in file Print.s
   Uses
      At line 147 in file Print.s
      At line 153 in file Print.s
      At line 159 in file Print.s
      At line 165 in file Print.s
      At line 171 in file Print.s
      At line 177 in file Print.s
      At line 183 in file Print.s
      At line 189 in file Print.s
      At line 195 in file Print.s
      At line 201 in file Print.s
      At line 268 in file Print.s
      At line 273 in file Print.s
      At line 278 in file Print.s
      At line 283 in file Print.s
      At line 288 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 25 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
362 symbols in table
